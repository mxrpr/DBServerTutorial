package com.mixer.query.sql;

import java.util.ArrayList;
import java.util.Iterator;

/**
 * Object to store the result generated by the SQLRegexp class
 */
public final class ResultSet implements Iterable<Object> {
	
    private Object[] result;
    
    public ResultSet(Object[] objects) {
        this.result = objects;
    }

	@Override
	public Iterator<Object> iterator() {
		return new MyIterator(this);
    }

    public ResultSet convertToPureObjects() {
        ArrayList<Object> _tmp = new ArrayList<>();
        for(Object o: result) {
            _tmp.add(((DBEntry)o).object);
        }

        this.result = _tmp.toArray();

        return this;
    }

	public boolean isEmpty() {
		return this.result.length == 0;
	}
    
    public int count() {
        return this.result.length;
    }

    public Object first(){
        if(this.result.length == 0)
            return null;
        return this.result[0];
    }

    public Object last(){
        return this.result[this.result.length];
    }
    
    class MyIterator implements Iterator<Object> {
        ResultSet myResultSet;
        Object current = null;
        int currentElement = 0;

        MyIterator(ResultSet resultset) {
            this.myResultSet = resultset;
            this.current = this.myResultSet.first();
        }

        @Override
        public boolean hasNext() {
            return this.currentElement < this.myResultSet.result.length;
        }

        @Override
        public Object next() {
            Object _current = this.myResultSet.result[this.currentElement];
            this.currentElement += 1;
            return _current;
        }
    }
}